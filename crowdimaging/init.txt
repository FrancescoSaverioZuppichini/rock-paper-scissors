Problema: si vuole sviluppare un sistema che permetta di poter acquisire con facilità i dati per risolvere problemi di image recognition, che abbia come fonti persone comuni, le quali possono inviare immagini ed altri dati attraverso un’applicazione. 
Sviluppare questo tipo di sistema presenta grandi difficoltà, le quali non sono strettamente tecniche. In primo luogo:

- L’utente deve essere incentivato a partecipare
- Può succedere che vengano postate immagini non inerenti al problema
- Possono essere postate più immagini uguali tra loro

Secondariamente, ci sono anche gli aspetti di performance da valutare. Se ci fossero anche solo dieci utenti, allenare da zero la rete neurale per ogni foto che essi caricano sarebbe folle.
Nota: l’idea di base è che non c’è una vera fine per un progetto, esso rimane attivo “in eterno”. Quindi il training può avvenire in contemporanea al testing.

- Decidere ogni quanto tempo aggiornare le reti
- Gestire efficacemente la separazione di training e testing
- Definire appieno quanta libertà ha un progetto (spazio di archiviazione, tempo di calcolo)

C’è anche da capire chi decide la struttura della rete neurale. Si potrebbe lasciare questo task all’utente medio, dopo avergli spiegato le basi, o dev’esserci un esperto dietro? IDSIA può guadagnare qualcosa su questo processo?

- Valutare un business plan
- Capire chi sta dietro alla creazione della rete neurale

Infine, vi sono dei problemi molto più di nicchia: se voglio fare una rete neurale che mi riconosca che tipo di fiore ho in mano, sorgono subito due difficoltà

- Per distinguere tra un numero di classi alto (anche banalmente superiore a 5) avrò bisogno di enormi quantità di immagini, e potrebbe ancora non essere sufficiente
- Non è garantito che l’utente medio sappia davvero che tipo di fiori stia fotografando

Tutti i problemi sorti, verranno sintetizzati il più possibile per poi essere esaminati.

_____

Dato un problema specifico, il software gestisce l'acquisizione dei dati. Fine. Niente TRAINING.
L'utente comune NON PUò creare il progetto. <-------------------

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

Come incentiviamo l’utente?

- Interfaccia “gamification”. L’utente deve avere dei titoli e delle medaglie a seconda di quanto partecipa e di quanto è affidabile nella sua partecipazione.

- Premio in denaro. Una compagnia può voler risolto qualche tipo di problema tramite il nostro prodotto, essa potrà quindi decidere di mettere un premio in palio, che potrebbe andare al miglior partecipante, o spartito tra I partecipanti in base alla partecipazione.

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

Come evitare gli outliers?

- Ad ogni immagine viene attribuito un livello di affidabilità
- Ad ogni utente è specificato un livello di affidabilità, che impatta sull’affidabilità delle sue foto
- Ogni immagine viene valutata da un algoritmo che le attribuisce un punteggio. Se il punteggio è basso, questo impatta la sua affidabilità
- Se il punteggio di affidabilità di un’immagine è troppo basso, viene chiesta una conferma/un parere da un utente affidabile

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

Come evitare I doppioni?

Difficile dirlo. Si può mettere un limite massimo di foto al minuto o all'ora, e si può verificare l'efficiacia dell'utente usando solo le sue foto per allenare la rete e guardando l'efficacia complessiva

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

Ogni quanto tempo aggiorno le reti?

Questo dipende da alcuni fattori come:
- A partire da quale data mi serve la rete?
- Con quanta frequenza la uso?

SI PUò AGGIORNARE LA RETE PARTENDO DALLO STATO ATTUALE
Qualunquista
Sorting degli elementi quando vengono caricati

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

Come separo efficacemente training e testing?

Uso il modello attuale per testare mentre alleno il modello futuro. Quando il modello futuro è pronto, aspetto che quello corrente non venga usato per sostituirli.

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

Quanto spazio di archiviazione e di computazione offro all'utente?

Se l'utente carica una foto, questa dovrebbe essere un bene per noi, non un male. Finché carica foto utili (non troll, non doppioni) ha senso dare spazio di archiviazione illimitato, mentre in caso contrario si potrebbe semplicemente fissare un limite di foto al giorno.
Meglio ancora, il limite di foto potrebbe essere non tanto sullo scatto quanto sull'upload: io magari ho il limite di 20 al giorno, ma ne scatto 40. 20 vengono inviate, le altre 20 rimangono nella memoria locale e vengono inviate il giorno dopo

La computazione pesante avviene quando la rete viene allenata, e la frequenza di training dipende non tanto da quante foto vengano caricate, quanto piuttosto dipende dalla volontà di chi ha creato il progetto.

Potrebbe essere utile mettere a disposizione un server che computi per gli utenti non a pagamento, ed uno dedicato per le utenze premium

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

Chi sta dietro alla rete neurale?

In caso di utenza premium, IDSIA crea la rete per lui

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

Valutare un business plan?

Ultimo dei problemi.
Comunque IDSIA può guadagnare da: Utenze premium o singoli servizi (creazione Rete, aumento capacità di calcolo), trattenuta sui premi in denaro offerti nei vari progetti, proprietà/copyright sulle foto caricate dagli utenti e sulle reti create.

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

Come faccio a gestire problemi dove ci sono tante classi tra le quali fare distinzione?

Aggiungo la possibilità per l'utente di inserire dati extra (specificati dal creatore del progetto). Nell'esempio del distinguere i tipi di fiore, potrei ad esempio chiedere il parametro "numero di petali", "ha foglie", e altri.

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

Come faccio ad essere sicuro che l'utente sia esperto nel campo richiesto dal progetto?

La persona che cera il progetto, fornisce qualche immagine di prova per verificare le conoscenze dell'utente. Nell'esempio dei fiori, il creatore del progetto potrebbe fornire alcune foto di fiori e  potrebbe chiedere all'utente "dimmi i loro nomi"


